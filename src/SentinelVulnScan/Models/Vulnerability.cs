namespace SentinelVulnScan.Models;

public class Vulnerability
{
    /// <summary>
    /// Unique identifier for the vulnerability
    /// </summary>
    public string Id { get; set; } = Guid.NewGuid().ToString();
    
    /// <summary>
    /// Type of vulnerability (SQL Injection, XSS, etc.)
    /// </summary>
    public string Type { get; set; } = string.Empty;
    
    /// <summary>
    /// Brief description of the vulnerability
    /// </summary>
    public string Description { get; set; } = string.Empty;
    
    /// <summary>
    /// Severity level (Critical, High, Medium, Low)
    /// </summary>
    public SeverityLevel Severity { get; set; }
    
    /// <summary>
    /// URL where the vulnerability was found
    /// </summary>
    public string Url { get; set; } = string.Empty;
    
    /// <summary>
    /// HTTP method used
    /// </summary>
    public string Method { get; set; } = string.Empty;
    
    /// <summary>
    /// Parameter or input field name
    /// </summary>
    public string Parameter { get; set; } = string.Empty;
    
    /// <summary>
    /// Payload that triggered the vulnerability
    /// </summary>
    public string Payload { get; set; } = string.Empty;
    
    /// <summary>
    /// Evidence of the vulnerability (response snippets)
    /// </summary>
    public string Evidence { get; set; } = string.Empty;
    
    /// <summary>
    /// Potential impact of exploiting this vulnerability
    /// </summary>
    public string Impact { get; set; } = string.Empty;
    
    /// <summary>
    /// Suggested remediation steps
    /// </summary>
    public string Remediation { get; set; } = string.Empty;
    
    /// <summary>
    /// CWE (Common Weakness Enumeration) ID if applicable
    /// </summary>
    public string CweId { get; set; } = string.Empty;
    
    /// <summary>
    /// Additional details or context
    /// </summary>
    public Dictionary<string, string> AdditionalDetails { get; set; } = new Dictionary<string, string>();
    
    /// <summary>
    /// When the vulnerability was discovered
    /// </summary>
    public DateTime DiscoveredAt { get; set; } = DateTime.UtcNow;
}

public enum SeverityLevel
{
    Critical,
    High,
    Medium,
    Low,
    Info
}
